syntax = "proto3";

package micin.dex;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "micin/dex/params.proto";
import "micin/dex/pool.proto";

option go_package = "micin/x/dex/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  rpc UpdateParams    (MsgUpdateParams   ) returns (MsgUpdateParamsResponse   );
  rpc CreatePool      (MsgCreatePool     ) returns (MsgCreatePoolResponse     );
  rpc UpdatePool      (MsgUpdatePool     ) returns (MsgUpdatePoolResponse     );
  rpc DeletePool      (MsgDeletePool     ) returns (MsgDeletePoolResponse     );
  rpc RemoveLiquidity (MsgRemoveLiquidity) returns (MsgRemoveLiquidityResponse);
  rpc AddLiquidity    (MsgAddLiquidity   ) returns (MsgAddLiquidityResponse   );
  rpc SubmitSpeedTest(MsgSubmitSpeedTest) returns (MsgSubmitSpeedTestResponse);
}


// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                   "authority";
  option           (amino.name) = "micin/x/dex/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreatePool {
  option (cosmos.msg.v1.signer) = "creator";
  string creator  = 1;
  string tokenA   = 2;
  string tokenB   = 3;
  uint64 reserveA = 4;
  uint64 reserveB = 5;
}

message MsgCreatePoolResponse {
  uint64 id = 1;
}

message MsgUpdatePool {
  option (cosmos.msg.v1.signer) = "creator";
  string creator  = 1;
  uint64 id       = 2;
  string tokenA   = 3;
  string tokenB   = 4;
  uint64 reserveA = 5;
  uint64 reserveB = 6;
}

message MsgUpdatePoolResponse {}

message MsgDeletePool {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

message MsgDeletePoolResponse {}

message MsgRemoveLiquidity {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string sender  = 2;
  string tokenA  = 3;
  string tokenB  = 4;
  string share   = 5;
}

message MsgAddLiquidity {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  uint64 poolId = 2;
  uint64 amountA = 3;
  uint64 amountB = 4;
}

message MsgAddLiquidityResponse {}



message MsgRemoveLiquidityResponse {}

message MsgSubmitSpeedTest {
  string creator = 1;
  int64 speed_mbps = 2;
  int64 timestamp = 3;
}

message MsgSubmitSpeedTestResponse {}
