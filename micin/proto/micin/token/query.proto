syntax = "proto3";

package micin.token;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "micin/token/params.proto";
import "micin/token/coin.proto";

option go_package = "micin/x/token/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/micin/token/params";
  
  }
  
  // Queries a list of Coin items.
  rpc Coin    (QueryGetCoinRequest) returns (QueryGetCoinResponse) {
    option (google.api.http).get = "/micin/token/coin/{id}";
  
  }
  rpc CoinAll (QueryAllCoinRequest) returns (QueryAllCoinResponse) {
    option (google.api.http).get = "/micin/token/coin";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetCoinRequest {
  uint64 id = 1;
}

message QueryGetCoinResponse {
  Coin Coin = 1 [(gogoproto.nullable) = false];
}

message QueryAllCoinRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCoinResponse {
  repeated Coin                                   Coin       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

